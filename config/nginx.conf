upstream puma {
  server unix:/var/translator/tmp/puma.sock;
}

server {
  listen 80 default_server;
  # rewrite ^(.*) https://deeptranslatorapp.com$1 permanent;
  return 404;
}

server {
  listen 443;
  server_name deeptranslatorapp.com;
  root /var/translator/public;
  try_files $uri @puma;

  ssl on;
  ssl_certificate /etc/letsencrypt/live/deeptranslatorapp.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/deeptranslatorapp.com/privkey.pem;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers HIGH:SEED:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!RSAPSK:!aDH:!aECDH:!EDH-DSS-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!SRP;
  ssl_prefer_server_ciphers on;

  client_max_body_size 50K;
  keepalive_timeout 65s; # elb

  sendfile on;

  error_page 500 502 504 /500.html;
  error_page 503 @503;

  location @puma {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_redirect off;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://puma;
    # limit_req zone=one;
  }

  location ~ (?:/assets/|/packs/) {
    gzip_static on;
    expires max;
    access_log off;
    add_header Cache-Control "public";
    add_header X-Debug-Location "assets,packs";
  }

  # location ~* \.(?:jpg|jpeg|gif|png)$ {
  #   expires 1M;
  #   access_log off;
  #   add_header Cache-Control "public";
  #   add_header X-Debug-Location "images";
  # }

  location = /50x.html {
    root html;
  }

  location = /404.html {
    root html;
  }

  location @503 {
    error_page 405 = /system/maintenance.html;
    if (-f $document_root/system/maintenance.html) {
      rewrite ^(.*)$ /system/maintenance.html break;
    }
    rewrite ^(.*)$ /503.html break;
  }

  if ($request_method !~ ^(GET|HEAD|PUT|PATCH|POST|DELETE|OPTIONS)$ ){
    return 405;
  }

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }
}
